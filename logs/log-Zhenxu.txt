Log of Development
Zhenxu Wang 218587295

===============================================
Feb 8th 20:35:39
    Created businessLogic package.
    Added CustomFormula interface, 
    MathUtil class to businessLogic packge.

    Created persistence package.
    Added LedgerItem class to persistence package.

    All classes/interfaces are bare bone,
    no implementation.
===============================================
Feb 8th 21:11:50
    Implemented constructors, getters, setters,
    and static factory method for LedgerItem.
===============================================
Feb 8th 22:41:21
	Implemented calcMonth(), calcYear(), 
	calcBiweek() in MathUtil class.
	
	Added InvalidDateException with implementation
	in Exception package.
	
	Added calcInterest() in CustomFormula interface.
===============================================
Feb 9th 12:31:55
	Added attribute ref, its static counter and getter for 
	LedgerItem class.
	
	Renamed MathUtil class to Util class.
===============================================
Feb 9th 23:14:41
	Removed public static main() from MainUi.java,
	added UI initializer in Main.java.
===============================================
Feb 10th 14:23:48
	Had a meeting with Mustafa, regarding LedgerItem class.
	Discussed about the attributes, and how to make connections
	with expenses/earnings related classes.
	
	Bug fixed in Util.calcBiweek().
	
	Tester file added for Util.java. 
	Added test cases for Util.calcYear(), Util.calcMonth(),
    Util.calcBiweek()
    
    Changed ref attribute to String in LedgerItem class.
	Also added a formatting method to format the ref String
===============================================
Feb 10th 17:52:40
	Created User class.
	
	Added encrypt() method in Util class.
===============================================
Feb 10th 20:20:13
	Added UserStub class. It is a stub DB for storing
	User objects.
===============================================
Feb 11th 01:19:26
	Added javadoc for static factory method in User class.
	
	Added initialization for stub UserDB in Main.main().
	
	Made test cases for User and UserStub.
	
	Changed the accessibility for dbUser to public in 
	UserStub class.
===============================================
Feb 12th 23:13:23
	Changed constructor from private to protected in
	LedgerItem class.
===============================================
Feb 13th 11:37:29
	Changed all private methods and attributes to
	protected. Removed static factory method in
	LedgerItem class.
	
	Changed parameter type of date to String in 
	LedgerItem class, and its now calls 
	DateParser.getDateFromString().
	
	Updated test cases to fit current working 
	version of LedgerItem class.
	
	Removed static factory method, 
	made constructor to public in User class.
	
	Updated test cases for all changes above.
===============================================
Feb 17th 03:04:42
	Made user manual, edited planning document.
	
	Updated README.md
===============================================
Feb 17th 12:30:58
	Checkout new branch itr1.
===============================================
Feb 17th 21:11:40
	Added mysql connector library.
===============================================
Feb 20th 15:20:24
	Changed Date to LocalDate in LedgerItem class.
	
	Changed Date to LocalDate in Util class.
===============================================
Feb 21st 14:30:38
	Created MS Azure account, Mysql server and database.
	
	Create MysqlConnection class.
	
	Added JFreeChart API.
===============================================
Mar 1st 11:30:00
	Meeting with Jinsong and Brahmjot, discussed about: 
	what classes we need to add for itr2;
	how GUIs work with each other;
	DB details.
===============================================
Mar 3rd 16:31:42 
	Create DBUtil class under persistence package.
	Added getConection() and createUser().
	
	Updated User class with more attributes.
	
	Updated UserTester class.
===============================================
Mar 3rd 22:02:43
	Added changePW() in DBUtil class.
	Updated UserDBTester.
===============================================
Mar 4th 21:17:38
	Changed encrypt() in Util class to salt+hash method.
	Updated all related references.
	And testers.
	
	Also tested the cloud DB.
	
	Added cloud DB connection in DBUtil class.
===============================================
Mar 5th 01:59:49
	Added Category class and tester.
	Updated Category related classes.
	
	Added feature to create a new table when 
	an user account is created.
===============================================
Mar 5th 03:17:31
	Added delectUser() and validateUser() in
	DBUtil class.
	And updated tester.
===============================================
Mar 5th 14:31:29
	Added insert() in DBUtil class.
===============================================
Mar 5th 22:13:12
	Meeting with Jinsong, talked about DBUtil methods.
	
	Finished insert() and test cases.
===============================================
Mar 6th 01:15:44
	Added update(), getTag(), getMaxRow() and
	Added refExist() method, updated javadoc in
	DBUtil class.
===============================================
Mar 6th 16:38:33
	Modified testInsert(), added javadoc for setUp()
	in UserDBTester.
===============================================
Mar	7th 23:20:31
	Fixed EarningTester, InvestmentTester, MiscTester,
	Stock_FundTester
===============================================
Mar 8th 01:21:53
	Update DB for demo user table rows.
===============================================
Mar 8th 11:30:00
	Meeting during lecture time. Confirmed DB methods,
	and UI designs.
===============================================
Mar 8th 20:42:14
	Rename UserDBTester to DBUtilTester.
	
	Added throws declaration to handle SQLException
	in Outputform class.
	
	Fixed the problems in query(), DBUtil class.
	ResultSet is now closed properly.
	Added "ref" to output JTable.
	Added the feature so that this method 
	can query for ref column.
===============================================
Mar 8th 22:57:25
	Fixed query() in DBUtil class and finished 
	the test case.
	
	Fixed bugs in insert() in DBUtil.
===============================================
Mar 9th 00:20:48
	Connected validation of user account to DB.
	In MainUI class.